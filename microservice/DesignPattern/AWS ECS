AWS ECS (Elastic Container Service)
is a fully managed container orchestration service that lets you run, stop, and manage Docker
containers on a cluster of EC2 instances or AWS Fargate (serverless mode).

How AWS ECS Works:
Containers are defined as tasks and are run on ECS clusters.
ECS clusters can use EC2 instances or Fargate for serverless container hosting.
ECS Service scales tasks based on demand, integrates with ALB/NLB for load balancing, and can use AWS
IAM roles for permissions.

Example: Deploy a Docker Container to ECS

Step 1: Define a Task Definition (taskdef.json)
{
  "family": "my-app",
  "containerDefinitions": [
    {
      "name": "web",
      "image": "my-ecr-repo/my-web-app:latest",
      "cpu": 256,
      "memory": 512,
      "essential": true,
      "portMappings": [
        {
          "containerPort": 80,
          "hostPort": 80
        }
      ]
    }
  ]
}

Step 2: Create and Run the Task using AWS CLI
# Register the task definition
aws ecs register-task-definition --cli-input-json file://taskdef.json

# Run the task on ECS cluster
aws ecs run-task \
  --cluster my-cluster \
  --launch-type EC2 \
  --task-definition my-app
