import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Employee {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;

    // Getters and setters
    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
}

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

public class EntityManagerExample {

    public static void main(String[] args) {
        // Create EntityManagerFactory and EntityManager
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit"); // Creates an EntityManagerFactory instance using the persistence unit defined in persistence.xml

        EntityManager em = emf.createEntityManager(); //Creates an EntityManager instance for interacting with the persistence context.

        // Begin transaction
        EntityTransaction tx = em.getTransaction();
        tx.begin();

        // Create and persist a new Employee entity
        Employee employee = new Employee();
        employee.setName("John Doe");
        em.persist(employee);

        // Commit the transaction
        tx.commit();

        // Find an Employee entity by ID
        Employee foundEmployee = em.find(Employee.class, employee.getId());
        System.out.println("Found Employee: " + foundEmployee.getName());

        // Close EntityManager and EntityManagerFactory
        em.close();
        emf.close();
    }
}

